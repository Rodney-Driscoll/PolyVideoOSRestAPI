namespace CCL.Simpl;
{
    static class SimplHelperFunctions 
    {
        // class delegates

        // class events

        // class functions
        static INTEGER_FUNCTION UShortStringIsNullOrEmptry ( STRING s );
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
    };
}

namespace CCL;
{
     class Global 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        static SIGNED_LONG_INTEGER DEFAULT_ENCODING_CODEPAGE;
        static STRING DEFAULT_ENCODING_NAME[];

        // class properties
    };

    static class Extensions 
    {
        // class delegates

        // class events

        // class functions
        static STRING_FUNCTION EmptyIfNull ( STRING input );
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
    };

     class Lazy 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
    };

    static class CommonUtilities 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
    };
}

namespace CCL.Feedback;
{
     class AFeedbackBase 
    {
        // class delegates

        // class events
        EventHandler FeedbackChanged ( AFeedbackBase sender, FeedbackEventArgs e );

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
        STRING Key[];
        SIGNED_LONG_INTEGER IntegerValue;
        STRING StringValue[];
    };

    enum eFeedbackType
    {
        None,
        Boolean,
        Integer,
        String,
    };
}

namespace CCL.Timer;
{
}

namespace CCL.Network.REST;
{
     class CCLGenericRestClientBase 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
    };

     class CCLHttpsRESTClient 
    {
        // class delegates

        // class events

        // class functions
        FUNCTION PrintDebugState ();
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
        SIGNED_LONG_INTEGER PoolSize;
    };
}

namespace CCL.Network;
{
     class NetworkDataMessageReceivedArgs 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
        STRING IPOrHostname[];
        INTEGER Port;
        STRING Message[];
    };

    enum RequestAuthType
    {
        NONE,
        BASIC,
    };

    enum CCLHttpStatusCode
    {
        Continue,
        SwitchingProtocols,
        OK,
        Created,
        Accepted,
        NonAuthoritativeInformation,
        NoContent,
        ResetContent,
        PartialContent,
        MultipleChoices,
        MovedPermanently,
        Redirect,
        SeeOther,
        NotModified,
        UseProxy,
        Unused,
        TemporaryRedirect,
        BadRequest,
        Unauthorized,
        PaymentRequired,
        Forbidden,
        NotFound,
        MethodNotAllowed,
        NotAcceptable,
        ProxyAuthenticationRequired,
        RequestTimeout,
        Conflict,
        Gone,
        LengthRequired,
        PreconditionFailed,
        RequestEntityTooLarge,
        RequestUriTooLong,
        UnsupportedMediaType,
        RequestedRangeNotSatisfiable,
        ExpectationFailed,
        UpgradeRequired,
        InternalServerError,
        NotImplemented,
        BadGateway,
        ServiceUnavailable,
        GatewayTimeout,
        HttpVersionNotSupported,
    };

    static class NetworkHelperFunctions 
    {
        // class delegates

        // class events

        // class functions
        static STRING_FUNCTION ConvertToHex ( STRING messageString );
        static STRING_FUNCTION ConvertToDefaultBase64Encoding ( STRING stringToEncode );
        static STRING_FUNCTION ConvertToBase64Encoding ( STRING stringToEncode , STRING encodingName );
        static STRING_FUNCTION CreateBasicAuthentiationBase64Encoding ( STRING username , STRING password );
        static STRING_FUNCTION GetURLPath ( STRING url );
        static STRING_FUNCTION GetURLPathAndParameters ( STRING url );
        static STRING_FUNCTION GetURLHostname ( STRING url );
        static STRING_FUNCTION GetURLHostnameAndPort ( STRING url );
        static STRING_FUNCTION GetURLProtocol ( STRING url );
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
    };
}

namespace CCL.Hardware;
{
    enum ComPortBaudRate
    {
        Baud300,
        Baud600,
        Baud1200,
        Baud1800,
        Baud2400,
        Baud3600,
        Baud4800,
        Baud7200,
        Baud9600,
        Baud14400,
        Baud19200,
        Baud28800,
        Baud38400,
        Baud57600,
        Baud115200,
        GRAFIK_EYE,
        HOMEWORKS,
        SMPTE,
        MIDI,
    };

    enum ComPortParity
    {
        ParityEven,
        ParityNone,
        ParityOdd,
        ParityZero,
    };

    enum ComPortDataBits
    {
        DataBits7,
        DataBits8,
    };

    enum ComPortStopBits
    {
        StopBits1,
        StopBits2,
    };

    enum ComPortSoftwareHandshake
    {
        SH_NONE,
        SH_XONXOFF,
        SH_XONT,
        SH_XONR,
    };

    enum ComPortHardwareHandshake
    {
        HW_NONE,
        HW_RTS,
        HW_CTS,
        HW_RTSCTS,
    };

    enum ComPortProtocol
    {
        ProtocolRS232,
        ProtocolRS422,
        ProtocolRS485,
    };

    enum ComPortReportCTS
    {
        OFF,
        ON,
    };

     class BasicProcessor 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
    };
}

namespace CCL.Switching;
{
     class CommonSwitchingDevice 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
    };

     class CoreSwitchingController 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
    };
}

namespace CCL.Logging;
{
    static class CCLDebug 
    {
        // class delegates

        // class events

        // class functions
        static FUNCTION SetDebugLevel ( eDebugLevel newLevel );
        static FUNCTION PrintToConsole ( eDebugLevel level , STRING msg );
        static FUNCTION PrintToLog ( eDebugLevel level , STRING msg );
        static FUNCTION PrintToConsoleAndLog ( eDebugLevel level , STRING msg );
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
        eDebugLevel DebugLevel;
    };

    enum eDebugLevel
    {
        Trace,
        Notice,
        Warning,
        Error,
    };
}

namespace CCL.Communications;
{
     class MessageDataStringArgs 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
        STRING MessageString[];
    };

     class MessageDataBytesArgs 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
    };
}

namespace CCL.Network.UDP;
{
     class BasicUDPServer 
    {
        // class delegates

        // class events
        EventHandler DataReceived ( BasicUDPServer sender, NetworkDataMessageReceivedArgs e );

        // class functions
        FUNCTION Initialize ( STRING ipAddressOrHostname , INTEGER port );
        FUNCTION Connect ();
        FUNCTION Disconnect ();
        FUNCTION SendMessageString ( STRING message );
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
        INTEGER Port;
        STRING IPOrHostname[];
    };
}

namespace CCL.JSON;
{
     class JSONStringMapConverter 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
    };
}

namespace CCL.Encryption;
{
    static class EncryptionHelper 
    {
        // class delegates

        // class events

        // class functions
        static STRING_FUNCTION GetMD5Hash ( STRING source );
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
    };
}

namespace CCL.Queue;
{
}

namespace MEI.Integration.PolyVideoOSRestAPI;
{
     class PolyVideoOSDevice 
    {
        // class delegates

        // class events
        EventHandler OnSessionStateChanged ( PolyVideoOSDevice sender, SessionStateChangedEventArgs args );
        EventHandler OnDevideModeChanged ( PolyVideoOSDevice sender, UShortChangeEventArgs args );
        EventHandler OnErrorStateChanged ( PolyVideoOSDevice sender, ErrorChangeEventArgs args );

        // class functions
        INTEGER_FUNCTION Connect ();
        INTEGER_FUNCTION Disconnect ();
        INTEGER_FUNCTION Reboot ();
        INTEGER_FUNCTION StartDeviceMode ();
        INTEGER_FUNCTION StopDeviceMode ();
        FUNCTION PrintDebugState ();
        FUNCTION Dispose ();
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
        STRING HostNameOrIPAddress[];
        STRING Username[];
        STRING Password[];
        INTEGER DebugState;
        INTEGER Connected;
    };

     class APIEventArgsBase 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
        CCLWebResponse Response;
    };

     class APISessionStateEventArgs 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
        eSessionState State;
        STRING SessionID[];
        STRING StringState[];
        APISessionStateObject SessionState;
        INTEGER UShortState;
        CCLWebResponse Response;
    };

     class APISystemModeStateEventArgs 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
        APISystemModeObject SystemMode;
        CCLWebResponse Response;
    };

     class APIGenericStateEventArgs 
    {
        // class delegates

        // class events

        // class functions
        INTEGER_FUNCTION GetResponseCode ();
        STRING_FUNCTION GetResponseContent ();
        STRING_FUNCTION GetResponseURL ();
        SIGNED_LONG_INTEGER_FUNCTION GetHeaderCount ();
        STRING_FUNCTION GetHeaderKey ( SIGNED_LONG_INTEGER index );
        STRING_FUNCTION GetHeaderValue ( SIGNED_LONG_INTEGER index );
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
        CCLWebResponse Response;
    };

    enum eCommandSyntaxType
    {
        JSON,
    };

    enum eCommandInputFormatType
    {
        NONE,
        PATH,
        QUERY,
        BODY_JSON,
        BODY_TEXT,
    };

    enum eSessionState
    {
        LOGGED_OUT,
        LOGGED_IN,
        LOGGING_IN,
        INVALID_CREDENTIALS,
        LOCKED_OUT,
        LOGIN_ERROR,
    };
}

namespace MEI.Integration.PolyVideoOSRestAPI.API_Objects;
{
     class APIObjectBase 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
        STRING OriginalContent[];
    };

     class APISessionStateObject 
    {
        // class delegates

        // class events

        // class functions
        STRING_FUNCTION ToString ();
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();

        // class variables
        INTEGER __class_id__;

        // class properties
        InternalSessionStatus LoginStatus;
        InternalSessionState Session;
        STRING Reason[];
        INTEGER UShortSuccess;
        STRING OriginalContent[];
    };

     class InternalSessionStatus 
    {
        // class delegates

        // class events

        // class functions
        STRING_FUNCTION ToString ();
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();

        // class variables
        INTEGER __class_id__;

        // class properties
        INTEGER FailedLogins;
        STRING LastLoginClient[];
        STRING LastLoginClientType[];
        STRING LoginResult[];
    };

     class InternalSessionState 
    {
        // class delegates

        // class events

        // class functions
        STRING_FUNCTION ToString ();
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();

        // class variables
        INTEGER __class_id__;

        // class properties
        STRING ClientType[];
        STRING Location[];
        STRING Role[];
        STRING SessionID[];
        STRING UserID[];
    };

     class APISystemModeObject 
    {
        // class delegates

        // class events

        // class functions
        STRING_FUNCTION ToString ();
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();

        // class variables
        INTEGER __class_id__;

        // class properties
        STRING ActivePersona[];
        STRING App[];
        STRING AppPersona[];
        STRING EcoMode[];
        STRING Mode[];
        STRING OriginalContent[];
    };
}

namespace MEI.Integration.PolyVideoOSRestAPI.Simpl_Interface;
{
     class SessionStateChangedEventArgs 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
        STRING StringState[];
        eSessionState State;
        INTEGER UState;
        INTEGER UConnected;
    };
}

namespace MEI.Integration.PolyVideoOSRestAPI.Events;
{
     class BooleanChangeEventArgs 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
        INTEGER UShortValue;
        INTEGER EventType;
    };

     class UShortChangeEventArgs 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
        INTEGER EventType;
        INTEGER Value;
        INTEGER LastValue;
    };

     class StringChangeEventArgs 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
        INTEGER EventType;
        STRING Value[];
        STRING LastValue[];
    };

     class ErrorChangeEventArgs 
    {
        // class delegates

        // class events

        // class functions
        SIGNED_LONG_INTEGER_FUNCTION GetHashCode ();
        STRING_FUNCTION ToString ();

        // class variables
        INTEGER __class_id__;

        // class properties
        INTEGER UShortIsError;
        INTEGER EventType;
        STRING Value[];
        STRING LastValue[];
    };
}

namespace MEI.Integration.PolyVideoOSRestAPI.Queue;
{
}

namespace MEI.Integration.PolyVideoOSRestAPI.InputCommands;
{
}

